/**
  * MIXINS
  */

// Make a property fluidly responsive by using calc and viewport units.
// USAGE: @include fluid-property(font-size, 40, 64);
@mixin fluid-property($property, $min:20, $max:30, $start: 480px, $end: 1200px, $clip: true, $clipAtStart: true, $clipAtEnd: true) {
  $start: $start / ($start * 0 + 1);
  $end: $end / ($end * 0 + 1);
  $multiplier: ($max - $min) / ($end - $start) * 100;
  $adder: ($min * $end - $max * $start) / ($end - $start);
  $formula: calc(#{$multiplier + 0vw} + #{$adder + 0px});
  $median: ($max+$min)/2;
  $fallback: #{$median + 0px};
  @if $clip and $clipAtStart {
    @media (max-width: #{$start + 0px}) {
      #{$property}: $fallback;
      #{$property}: $min + 0px;
    }
  }
  @if $clip and $clipAtEnd {
    @media (min-width: #{$end + 0px}) {
      #{$property}: $fallback;
      #{$property}: $max + 0px;
    }
  }
  #{$property}: $fallback;
  #{$property}: $formula;
}

/**
  * Viewport based responsive text
  */
@mixin fluid-text($min:20, $max:30, $start: 480, $end: 920) {
  @include fluid-property(font-size, $min, $max, $start, $end);
}


/**
  * Convert pixels to ems
  */
// Strip units from values
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}
// Calculate ems from pixels
// Usage: margin-top: calc-em(60px);
@function calc-em($px, $base: 16) {
  $px: strip-unit($px);
  $base: strip-unit($base);
  @if $px == 1 {
    @return 1px;
  }
  @return ($px / $base) * 1em;
}
